{
  "version": 3,
  "sources": ["../../docs/dist/SpringMassSystem/SpringMassCanvas.js", "../../docs/dist/SpringMassSystem/SpringSegment.js", "../../docs/dist/SpringMassSystem/SpringMassStatic.js", "../../docs/_snowpack/pkg/gl-matrix.js", "../../docs/dist/Utility/Input/KeycodeTable.js", "../../docs/dist/Utility/Input/InputHandler.js", "../../docs/dist/SpringMassSystem/SpringMassUtility.js", "../../docs/dist/SpringMassSystem/SpringNode.js", "../../docs/dist/SpringMassSystem/SpringMassCloth.js", "../../docs/dist/SpringMassSystem/SpringMassSystem.js", "../../docs/dist/index.js"],
  "sourcesContent": ["export default class SpringMassCanvas {\n  constructor(canvasQueryString) {\n    this.maxDrawBufferSize = 2048;\n    this._canvasDom = document.querySelector(canvasQueryString);\n    this._context = this._canvasDom.getContext(\"2d\");\n    this.AutoSetCanvasSize();\n    window.addEventListener(\"resize\", () => {\n      this.AutoSetCanvasSize();\n    });\n  }\n  get canvasDom() {\n    return this._canvasDom;\n  }\n  Draw(nodes) {\n    this._context.clearRect(0, 0, this._canvasDom.width, this._canvasDom.height);\n    let nLens = nodes.length;\n    for (let i = 0; i < nLens; i++) {\n      this.DrawCircle(nodes[i].position[0], nodes[i].position[1], 7);\n    }\n  }\n  DrawCircle(x, y, radius) {\n    this._context.beginPath();\n    this._context.fillStyle = \"rgb(255,165,0)\";\n    this._context.arc(x, y, radius, 0, 2 * Math.PI);\n    this._context.fill();\n  }\n  AutoSetCanvasSize() {\n    this.SetCanvasToSceenSize(this._canvasDom.clientWidth, this._canvasDom.clientHeight);\n  }\n  SetCanvasToSceenSize(displayWidth, displayHeight) {\n    if (displayWidth > this.maxDrawBufferSize || displayHeight > this.maxDrawBufferSize) {\n      displayHeight = displayHeight > displayWidth ? this.maxDrawBufferSize : this.maxDrawBufferSize * displayHeight / displayWidth;\n      displayWidth = displayWidth >= displayHeight ? this.maxDrawBufferSize : this.maxDrawBufferSize * displayWidth / displayHeight;\n    }\n    this._canvasDom.width = displayWidth;\n    this._canvasDom.height = displayHeight;\n  }\n}\n", "export default class SpringSegment {\n  get nodeLength() {\n    return this._nodes.length;\n  }\n  get nodes() {\n    return this._nodes;\n  }\n  constructor(parentX, parentY, segmentCount, segmentDistance) {\n    this._segmentNumber = segmentCount;\n    this._segmentDistance = segmentDistance;\n    this._nodes = [];\n    for (let i = 0; i < segmentCount - 1; i++) {\n      this.PushNode();\n    }\n  }\n  PushNode() {\n    if (this.nodeLength <= 0)\n      return;\n    let lastNode = this._nodes[this.nodeLength - 1];\n    let lNodeX = lastNode.position[0], lNodeY = lastNode.position[1];\n    return null;\n  }\n  PopNode() {\n    if (this.nodeLength <= 0)\n      return;\n    this._segmentNumber--;\n    return this._nodes.pop();\n  }\n  Update() {\n    let l = this._nodes.length;\n    for (let i = 0; i < l; i++) {\n      if (this._nodes[i].isStatic)\n        continue;\n      let anchorNode = i > 0 ? this._nodes[i - 1] : null;\n      this._nodes[i].UpdateForce(anchorNode);\n    }\n  }\n}\n", "export var SpringNodeType;\n(function(SpringNodeType2) {\n  SpringNodeType2[SpringNodeType2[\"FreePoint\"] = 0] = \"FreePoint\";\n  SpringNodeType2[SpringNodeType2[\"ControlPoint\"] = 1] = \"ControlPoint\";\n})(SpringNodeType || (SpringNodeType = {}));\n", "/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(2);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction clone(a) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction fromValues(x, y) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nvar vec2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create: create,\n  clone: clone,\n  fromValues: fromValues,\n  copy: copy,\n  set: set,\n  add: add,\n  subtract: subtract,\n  multiply: multiply,\n  divide: divide,\n  ceil: ceil,\n  floor: floor,\n  min: min,\n  max: max,\n  round: round,\n  scale: scale,\n  scaleAndAdd: scaleAndAdd,\n  distance: distance,\n  squaredDistance: squaredDistance,\n  length: length,\n  squaredLength: squaredLength,\n  negate: negate,\n  inverse: inverse,\n  normalize: normalize,\n  dot: dot,\n  cross: cross,\n  lerp: lerp,\n  random: random,\n  transformMat2: transformMat2,\n  transformMat2d: transformMat2d,\n  transformMat3: transformMat3,\n  transformMat4: transformMat4,\n  rotate: rotate,\n  angle: angle,\n  zero: zero,\n  str: str,\n  exactEquals: exactEquals,\n  equals: equals,\n  len: len,\n  sub: sub,\n  mul: mul,\n  div: div,\n  dist: dist,\n  sqrDist: sqrDist,\n  sqrLen: sqrLen,\n  forEach: forEach\n});\n\nexport { vec2 };\n", "export const InputEventTitle = Object.freeze({\n  up: \"up\",\n  down: \"down\",\n  left: \"left\",\n  right: \"right\"\n});\nexport const KeycodeLookupTable = Object.create({\n  w: InputEventTitle.up,\n  s: InputEventTitle.down,\n  d: InputEventTitle.right,\n  a: InputEventTitle.left,\n  ArrowUp: InputEventTitle.up,\n  ArrowDown: InputEventTitle.down,\n  ArrowRight: InputEventTitle.right,\n  ArrowLeft: InputEventTitle.left\n});\n", "import {vec2} from \"../../../_snowpack/pkg/gl-matrix.js\";\nimport {KeycodeLookupTable, InputEventTitle} from \"./KeycodeTable.js\";\nexport const InputMovementType = Object.freeze({\n  Up: vec2.fromValues(0, 1),\n  Down: vec2.fromValues(0, -1),\n  Left: vec2.fromValues(-1, 0),\n  Right: vec2.fromValues(1, 0),\n  Center: vec2.fromValues(0, 0)\n});\nexport var ClickState;\n(function(ClickState2) {\n  ClickState2[ClickState2[\"Down\"] = 0] = \"Down\";\n  ClickState2[ClickState2[\"Up\"] = 1] = \"Up\";\n  ClickState2[ClickState2[\"Click\"] = 2] = \"Click\";\n})(ClickState || (ClickState = {}));\nclass InputHandler {\n  constructor() {\n    this._buttonState = Object.create({});\n    this._cacheKeyboardDirection = vec2.create();\n    this.isMouseDown = false;\n  }\n  GetButtonState(actionName) {\n    return false;\n  }\n  RegisterButtonEvent(callback) {\n    this._mouseClickCallback = callback;\n    let self = this;\n    window.addEventListener(\"click\", (e) => {\n      callback(2);\n    });\n    window.addEventListener(\"mousedown\", (e) => {\n      callback(0);\n      this.isMouseDown = true;\n    });\n    window.addEventListener(\"mouseup\", (e) => {\n      this.isMouseDown = false;\n      callback(1);\n    });\n  }\n  RegisterMouseMovement(canvasDom, callback) {\n    let deltaArray = [0, 0];\n    let mousePosition = [0, 0];\n    window.addEventListener(\"mousemove\", (e) => {\n      deltaArray[0] = e.movementX;\n      deltaArray[1] = e.movementY;\n      mousePosition[0] = e.offsetX;\n      mousePosition[1] = e.offsetY;\n      callback(mousePosition, deltaArray);\n    });\n  }\n  RegisterMovementEvent(callback) {\n    let self = this;\n    this._keyboardCallback = callback;\n    window.addEventListener(\"keydown\", (e) => {\n      let lowerCaseKey = e.key.toLowerCase();\n      if (lowerCaseKey in KeycodeLookupTable) {\n        this.SetKeyboardState(KeycodeLookupTable[e.key], true);\n      }\n    });\n    window.addEventListener(\"keyup\", (e) => {\n      let lowerCaseKey = e.key.toLowerCase();\n      if (lowerCaseKey in KeycodeLookupTable)\n        this.SetKeyboardState(KeycodeLookupTable[e.key], false);\n    });\n  }\n  OnUpdate() {\n    this._cacheKeyboardDirection[0] = 0;\n    this._cacheKeyboardDirection[1] = 0;\n    if (this._buttonState.hasOwnProperty(InputEventTitle.left)) {\n      vec2.add(this._cacheKeyboardDirection, this._cacheKeyboardDirection, InputMovementType.Left);\n    }\n    if (this._buttonState.hasOwnProperty(InputEventTitle.down)) {\n      vec2.add(this._cacheKeyboardDirection, this._cacheKeyboardDirection, InputMovementType.Down);\n    }\n    if (this._buttonState.hasOwnProperty(InputEventTitle.right)) {\n      vec2.add(this._cacheKeyboardDirection, this._cacheKeyboardDirection, InputMovementType.Right);\n    }\n    if (this._buttonState.hasOwnProperty(InputEventTitle.up)) {\n      vec2.add(this._cacheKeyboardDirection, this._cacheKeyboardDirection, InputMovementType.Up);\n    }\n    if (this.isMouseDown && this._mouseClickCallback != null)\n      this._mouseClickCallback(0);\n    if (this._keyboardCallback != null)\n      this._keyboardCallback(this._cacheKeyboardDirection);\n  }\n  SetKeyboardState(keyCode, state) {\n    if (state)\n      this._buttonState[keyCode] = true;\n    else\n      delete this._buttonState[keyCode];\n  }\n}\nexport default InputHandler;\n", "export function GetLinearIndex(gridX, gridY, size) {\n  return gridX + gridY * size;\n}\nexport function GetSpringLinkTableID(index_a, index_b) {\n  let frontID = index_a < index_b ? index_a : index_b;\n  let backID = frontID == index_a ? index_b : index_a;\n  return frontID + \"-\" + backID;\n}\n", "import {vec2} from \"../../_snowpack/pkg/gl-matrix.js\";\nimport {SpringNodeType} from \"./SpringMassStatic.js\";\nimport {GetLinearIndex, GetSpringLinkTableID} from \"./SpringMassUtility.js\";\nexport default class SpringNode {\n  constructor(x, y, index, gridIndexX, gridIndexY, type) {\n    this.isStatic = false;\n    this._mass = 5;\n    this._k = 7;\n    this._gravity = 10;\n    this._timeStep = 0.02;\n    this._damping = 30;\n    this._position = vec2.fromValues(x, y);\n    this._type = type;\n    this._velocity = vec2.fromValues(0, 0);\n    this._acceleration = vec2.fromValues(0, 0);\n    this._externalForce = vec2.fromValues(0, this._gravity);\n    this._index = index;\n    this._gridIndexX = gridIndexX;\n    this._gridIndexY = gridIndexY;\n    this.isStatic = type == SpringNodeType.ControlPoint ? true : false;\n  }\n  get type() {\n    return this._type;\n  }\n  get position() {\n    return this._position;\n  }\n  get index() {\n    return this._index;\n  }\n  UpdatePosition(x, y) {\n    this._position[0] = x;\n    this._position[1] = y;\n  }\n  UpdateForce(anchorNode) {\n    var springForce = vec2.create();\n    var dampingForce = vec2.create();\n    var force = vec2.create();\n    var acceleration = vec2.create();\n    vec2.sub(springForce, this._position, anchorNode.position);\n    vec2.scale(springForce, springForce, -this._k);\n    vec2.scale(dampingForce, this._velocity, this._damping);\n    vec2.sub(force, springForce, dampingForce);\n    force[1] = force[1] + this._mass * this._gravity;\n    let m = 1 / this._mass;\n    vec2.scale(acceleration, force, m);\n    vec2.scale(acceleration, acceleration, this._timeStep);\n    vec2.add(this._velocity, this._velocity, acceleration);\n    vec2.add(this._position, this._position, this._velocity);\n  }\n  UpdateVelocity(maxSize, lookUpTable) {\n    var dampingForce = vec2.create();\n    this._acceleration = this.IntegrateForce(maxSize, lookUpTable);\n    vec2.scale(dampingForce, this._velocity, this._damping);\n    vec2.sub(this._acceleration, this._acceleration, dampingForce);\n    this._externalForce = vec2.fromValues(0, this._gravity);\n    vec2.scale(this._externalForce, this._externalForce, this._mass);\n    vec2.add(this._acceleration, this._externalForce, this._acceleration);\n    let m = 1 / this._mass;\n    vec2.scale(this._acceleration, this._acceleration, m);\n    vec2.scale(this._acceleration, this._acceleration, this._timeStep);\n    vec2.add(this._velocity, this._velocity, this._acceleration);\n    vec2.add(this._position, this._position, this._velocity);\n  }\n  IntegrateForce(maxSize, lookUpTable) {\n    vec2.zero(this._acceleration);\n    let lookUpPossibleSpring = [\n      [0, 1],\n      [1, 0],\n      [0, -1],\n      [-1, 0],\n      [1, 1],\n      [1, -1],\n      [-1, -1],\n      [-1, 1],\n      [0, 2],\n      [2, 0],\n      [0, -2],\n      [-2, 0]\n    ];\n    lookUpPossibleSpring.forEach((offset) => {\n      let link_gridX = this._gridIndexX + offset[0];\n      let link_gridY = this._gridIndexY + offset[1];\n      if (link_gridX < maxSize && link_gridY < maxSize && link_gridX >= 0 && link_gridY >= 0) {\n        let lookUpNodeIndex = GetLinearIndex(link_gridX, link_gridY, maxSize);\n        let tableID = GetSpringLinkTableID(this._index, lookUpNodeIndex);\n        if (tableID in lookUpTable) {\n          let springLink = lookUpTable[tableID];\n          let linkNode = Math.floor(springLink.nodes[0].index) == Math.floor(this.index) ? springLink.nodes[1] : springLink.nodes[0];\n          let springForce = this.CalSpringForce(this, linkNode, this._k, springLink.restLength);\n          vec2.add(this._acceleration, this._acceleration, springForce);\n        }\n      }\n    });\n    return this._acceleration;\n  }\n  CalSpringForce(mainNode, linkNode, k, restLength) {\n    let springForce = vec2.fromValues(0, 0);\n    let normalize = vec2.fromValues(0, 0);\n    let diff = vec2.sub(springForce, mainNode.position, linkNode.position);\n    vec2.normalize(normalize, diff);\n    vec2.scale(normalize, normalize, restLength);\n    vec2.add(normalize, linkNode.position, normalize);\n    let diffAfterNormalize = vec2.sub(normalize, mainNode.position, normalize);\n    return vec2.scale(springForce, diffAfterNormalize, -k);\n  }\n}\n", "import SpringNode from \"./SpringNode.js\";\nimport {SpringNodeType} from \"./SpringMassStatic.js\";\nimport {vec2} from \"../../_snowpack/pkg/gl-matrix.js\";\nimport {GetLinearIndex, GetSpringLinkTableID} from \"./SpringMassUtility.js\";\nexport default class SpringCloth {\n  get nodeLength() {\n    return this._nodes.length;\n  }\n  get nodes() {\n    return this._nodes;\n  }\n  constructor(size, subdivide, startPointX, startPointY) {\n    this._width = size;\n    this._height = size;\n    this._subdivide = subdivide;\n    this._springNatureLength = size / subdivide;\n    this._nodes = this.CreateClothNodes(startPointX, startPointY, subdivide, this._springNatureLength);\n    this._springLinkLookupTable = this.GenerateSpringLink();\n    console.log(this._springLinkLookupTable);\n  }\n  Update() {\n    let l = this._nodes.length;\n    for (let i = 0; i < l; i++) {\n      if (this._nodes[i].isStatic)\n        continue;\n      this._nodes[i].UpdateVelocity(this._subdivide + 1, this._springLinkLookupTable);\n    }\n  }\n  CreateClothNodes(startPointX, startPointY, subdivide, springNatureLength) {\n    let nodes = [];\n    for (let y = 0; y <= subdivide; y++) {\n      for (let x = 0; x <= subdivide; x++) {\n        let type = y == 0 && x == 0 || y == 0 && x == subdivide ? SpringNodeType.ControlPoint : SpringNodeType.FreePoint;\n        let posX = startPointX + x * springNatureLength;\n        let posY = startPointY + y * springNatureLength;\n        let index = GetLinearIndex(x, y, subdivide + 1);\n        nodes.push(new SpringNode(posX, posY, index, x, y, type));\n      }\n    }\n    return nodes;\n  }\n  GenerateSpringLink() {\n    let table = {};\n    let nodeLen = this.nodeLength;\n    let size = this._subdivide + 1;\n    for (let i = 0; i < nodeLen; i++) {\n      let gridX = i % size;\n      let gridY = Math.floor(i / size);\n      this.SetSpringLinkToTable(table, this.FindSpring(this._nodes[i], i, gridX, gridY, size, this._nodes, [[1, 0], [0, 1]]));\n      this.SetSpringLinkToTable(table, this.FindSpring(this._nodes[i], i, gridX, gridY, size, this._nodes, [[-1, 1], [1, 1]]));\n      this.SetSpringLinkToTable(table, this.FindSpring(this._nodes[i], i, gridX, gridY, size, this._nodes, [[2, 0], [0, 2]]));\n    }\n    return table;\n  }\n  FindSpring(node, index, gridX, gridY, maxSize, set, possibleIndexSet) {\n    let links = [];\n    possibleIndexSet.forEach((s) => {\n      let link_gridX = gridX + s[0];\n      let link_gridY = gridY + s[1];\n      if (link_gridX < maxSize && link_gridY < maxSize && link_gridX >= 0 && link_gridY >= 0) {\n        let arrayIndex = GetLinearIndex(link_gridX, link_gridY, maxSize);\n        let linkNode = set[arrayIndex];\n        let restLength = vec2.dist(node.position, linkNode.position);\n        let linkType = {id: GetSpringLinkTableID(index, arrayIndex), restLength, nodes: [node, linkNode]};\n        links.push(linkType);\n      }\n    });\n    return links;\n  }\n  SetSpringLinkToTable(linkTable, linkTypes) {\n    linkTypes.forEach((l) => {\n      if (!(l.id in linkTable)) {\n        linkTable[l.id] = l;\n      }\n    });\n    return linkTable;\n  }\n}\n", "import SpringMassCanvas from \"./SpringMassCanvas.js\";\nimport SpringSegment from \"./SpringSegment.js\";\nimport {SpringNodeType} from \"./SpringMassStatic.js\";\nimport InputHandler, {ClickState} from \"../Utility/Input/InputHandler.js\";\nimport {vec2} from \"../../_snowpack/pkg/gl-matrix.js\";\nimport SprinMassCloth from \"./SpringMassCloth.js\";\nexport default class SpringMassSystem {\n  constructor(canvasQueryString) {\n    this.previousTimeStamp = 0;\n    this._canvas = new SpringMassCanvas(canvasQueryString);\n    this.inputHandler = new InputHandler();\n    this.segments = [];\n    this.lastMousePosition = [0, 0];\n    this.inputHandler.RegisterMouseMovement(this._canvas.canvasDom, this.OnMouseUIEvent.bind(this));\n    this.inputHandler.RegisterButtonEvent(this.OnMouseClickEvent.bind(this));\n    window.requestAnimationFrame(this.FrameLoop.bind(this));\n  }\n  CreateSpringSegment(x, y, segmentCount, segmentDistance) {\n    let segment = new SpringSegment(x, y, segmentCount, segmentDistance);\n    this.segments.push(segment);\n  }\n  CreateClothMesh(size, subdivide, startPointX, startPointY) {\n    this.springCloth = new SprinMassCloth(size, subdivide, startPointX, startPointY);\n    this.springCloth.Update();\n    console.log(this.springCloth.nodeLength);\n  }\n  FrameLoop(timeStamp) {\n    let ms = (timeStamp - this.previousTimeStamp) / 1e3;\n    this.time = timeStamp / 1e3;\n    this.previousTimeStamp = timeStamp;\n    this._canvas.Draw(this.springCloth.nodes);\n    this.springCloth.Update();\n    this.inputHandler.OnUpdate();\n    if (this.selectedControlPoint != null)\n      this.selectedControlPoint.UpdatePosition(this.lastMousePosition[0], this.lastMousePosition[1]);\n    window.requestAnimationFrame(this.FrameLoop.bind(this));\n  }\n  OnMouseUIEvent(mouse_position, mouse_delta) {\n    this.lastMousePosition = mouse_position;\n  }\n  OnMouseClickEvent(state) {\n    if (state == ClickState.Down) {\n      let controlPoint = this.FindControlPoint(this.lastMousePosition[0], this.lastMousePosition[1]);\n      if (controlPoint != null)\n        this.selectedControlPoint = controlPoint;\n    }\n    if (state == ClickState.Up) {\n      this.selectedControlPoint = null;\n    }\n  }\n  FindControlPoint(x, y) {\n    let ctrlNode = null;\n    this.springCloth.nodes.forEach((n) => {\n      if (n.type == SpringNodeType.ControlPoint) {\n        let dist = vec2.distance(n.position, vec2.fromValues(x, y));\n        if (dist < 10) {\n          ctrlNode = n;\n          return;\n        }\n      }\n    });\n    return ctrlNode;\n  }\n}\n", "import \"./stylesheet/main.css\";\nimport SpringMassSystem from \"./SpringMassSystem/SpringMassSystem.js\";\nconsole.log(\"Hello world\");\nlet canvasQuery = \"#webgl_canvas\";\nlet springMassSystem = new SpringMassSystem(canvasQuery);\nspringMassSystem.CreateClothMesh(200, 6, 200, 200);\n"],
  "mappings": "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",
  "names": []
}
